/* eslint-disable */
import React, { useState, useContext } from 'react';
import { Button, Typography, Input, TextField, MenuItem, InputLabel, FormHelperText, FormControl, Select, Autocomplete, useFormControl, Stack } from '@mui/material'
import { ProfileContext } from './ProfileContext'
import { USStates } from '../../utils/USStates';

const EditableInput = (props) => {
  let { disabled, setDisabled } = useContext(ProfileContext)
  return (
    <Input
      margin='dense'
      fullWidth
      sx={props.sx}
      type={props.type || 'text'}
      color="secondary"
      onChange={props.onChange}
      label={props.label}
      disabled={disabled}
      placeholder={props.label}
    />
  )
}

const StateSelector = (props) => {
  let { disabled, setDisabled } = useContext(ProfileContext)
  return (
    <Select
      sx={{ width: 70, margin: 0, padding: 0, height: 30, outline: 0 }}
      disablePortal
      label='State'
      id="state"
      onChange={props.onChange}
      // value={null}
      defaultValue={USStates[0].label}
      disabled={disabled}
      children={USStates.map(({ label }) =>
        <MenuItem value={label}>
          {label}
        </MenuItem>
      )}
    />
  )
}

const ProfileTextForm = (props) => {

  let {
    disabled,
    setDisabled,
    first_name,
    setFirst,
    last_name,
    setLast,
    email,
    setEmail,
    street_address,
    setStreet,
    city,
    setCity,
    homeState,
    setHomeState,
    zip,
    setZip,
    phone_number,
    setPhone,
  } = useContext(ProfileContext);



  return (
    <FormControl {...disabled} fullWidth>
      <Stack direction='row' sx={{ width: '100%' }}>
        <EditableInput
          label='First Name'
          id='first_name'
          value={first_name}
          onChange={e => setFirst(e.target.value)}
        />
        <EditableInput
          label='Last Name'
          id='last_name'
          value={last_name}
          onChange={e => setLast(e.target.value)}
        />
      </Stack>
      <EditableInput
        label='Email'
        type='email'
        id='email'
        onChange={(e) => setEmail(e.target.value)}
        value={email}
      />
      <EditableInput
        label='Street Address'
        id='street_address'
        onChange={e => setStreet(e.target.value)}
        value={street_address}
        />
      <Stack direction='row'>
        <EditableInput
          label='City'
          id='city'
          value={city}
          onChange={e => setCity(e.target.value)}
        />
        <StateSelector
          label='State'
          id='state'
          onChange={e => setHomeState(e.target.value)}
          value={homeState}
          />
        <EditableInput
          label='Zip'
          id='zip'
          value={zip}
          onChange={(e) => setZip(e.target.value)}
          />
      </Stack>
      <EditableInput
        label='Phone'
        id='phone_number'
        value={phone_number}
        onChange={e => setPhone(e.target.value)}
      />
    </FormControl>
  )
}

export default ProfileTextForm;

/*

  id                       int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY UNIQUE,
  hash                    varchar(60) NOT NULL,
  password_salt           varchar(10) NOT NULL,
  session_id              varchar(20) NULL,
  email                   varchar(20) NOT NULL,
  date_created            timestamptz NOT NULL,
  first_name              varchar(50) NULL,
  last_name               varchar(50) NULL,
  street_address          varchar(100) NULL,
  city                    varchar(50) NULL,
  "state"                 varchar(50) NULL,
  zip                     varchar(10) NULL,
  phone_number            smallint NULL,
  profile_img_url         varchar(200) NULL,


*/